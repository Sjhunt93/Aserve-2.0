/*
 *  TransportButtonComponent.h
 *  Axiom
 *
 *  Created by tjmitche on 06/11/2010.
 *  Copyright 2010 __MyCompanyName__. All rights reserved.
 *
 */

#ifndef H_TRANSPORTBUTTONCOMPONENT
#define H_TRANSPORTBUTTONCOMPONENT

#include "../JuceLibraryCode/JuceHeader.h"
#include "MidiManager.h"

class TransportButton   : public ShapeButton
{
public:
    enum ButtonStyle
    {
        RewindButton = 0,
        FastForwardButton,
        StopButton,
        PlayButton,
        LoopButton,
        RecordButton
    };
    
    struct TransportIcons
    {
        TransportIcons()
        {
            {
                static const unsigned char pathData[] = { 110,109,0,192,88,67,0,16,188,67,108,0,192,88,67,0,64,140,66,108,0,0,0,0,0,32,95,67,108,0,192,88,67,0,16,188,67,99,109,0,128,101,67,0,32,95,67,108,0,32,223,67,0,16,188,67,108,0,32,223,67,0,64,140,66,108,0,128,101,67,0,32,95,67,99,101,0,0 };
                
                Path path;
                path.loadPathFromData (pathData, sizeof (pathData));
                rewindIcon.addPath (path, path.getTransformToScaleToFit (Rectangle<float> (1.0f, 1.0f), true));
            }
            
            {
                static const unsigned char pathData[] = { 110,109,0,0,0,0,0,16,188,67,108,0,192,88,67,0,32,95,67,108,0,0,0,0,0,64,140,66,108,0,0,0,0,0,16,188,67,99,109,0,128,101,67,0,64,140,66,108,0,128,101,67,0,16,188,67,108,0,32,223,67,0,32,95,67,108,0,128,101,67,0,64,140,66,99,101,0,0 };
                
                Path path;
                path.loadPathFromData (pathData, sizeof (pathData));
                fastForwardIcon.addPath (path, path.getTransformToScaleToFit (Rectangle<float> (1.0f, 1.0f), true));
            }
            
            {
                static const unsigned char pathData[] = { 110,109,0,0,32,65,0,0,32,65,108,0,0,180,66,0,0,32,65,108,0,0,180,66,0,0,180,66,108,0,0,32,65,0,0,180,66,101,0,0 };
                
                Path path;
                path.loadPathFromData (pathData, sizeof (pathData));
                stopIcon.addPath (path, path.getTransformToScaleToFit (Rectangle<float> (1.0f, 1.0f), true));
            }
            
            {
                static const unsigned char pathData[] = { 110,109,0,0,32,65,0,0,200,65,108,0,0,32,65,0,0,150,66,108,0,0,32,66,0,0,72,66,108,0,0,32,65,0,0,200,65,99,101,0,0 };
                
                Path path;
                path.loadPathFromData (pathData, sizeof (pathData));
                playIcon.addPath (path, path.getTransformToScaleToFit (Rectangle<float> (1.0f, 1.0f), true));
            }
            
            {
                static const unsigned char pathData[] = { 110,109,0,64,140,67,0,0,153,66,108,0,64,140,67,0,0,0,0,108,0,128,50,67,0,0,204,66,108,0,64,140,67,0,0,76,67,108,0,64,140,67,0,0,255,66,98,51,83,182,67,0,0,255,66,0,192,216,67,154,89,68,67,0,192,216,67,0,64,140,67,98,0,192,216,67,0,0,153,67,205,236,212,
                    67,0,192,165,67,51,211,207,67,51,243,175,67,108,51,243,226,67,51,19,195,67,98,0,224,235,67,0,128,178,67,0,64,242,67,102,166,160,67,0,64,242,67,0,64,140,67,98,0,64,242,67,205,76,40,67,154,89,196,67,0,0,153,66,0,64,140,67,0,0,153,66,99,109,0,64,140,67,
                    0,192,216,67,98,154,89,68,67,0,192,216,67,0,0,255,66,51,83,182,67,0,0,255,66,0,64,140,67,98,0,0,255,66,0,0,127,67,102,38,7,67,0,128,101,67,154,89,17,67,154,25,81,67,108,52,51,214,66,154,217,42,67,98,0,128,178,66,0,0,76,67,0,0,153,66,51,179,111,67,0,0,
                    153,66,0,64,140,67,98,0,0,153,66,154,89,196,67,205,76,40,67,0,64,242,67,0,64,140,67,0,64,242,67,108,0,64,140,67,0,64,12,68,108,0,64,191,67,0,128,229,67,108,0,64,140,67,0,128,178,67,108,0,64,140,67,0,192,216,67,99,101,0,0 };
                
                Path path;
                path.loadPathFromData (pathData, sizeof (pathData));
                loopIcon.addPath (path, path.getTransformToScaleToFit (Rectangle<float> (1.0f, 1.0f), true));
            }
            
            {
                static const unsigned char pathData[] = { 110,109,0,0,200,66,0,0,200,66,108,0,0,200,66,0,0,200,66,108,136,0,195,66,254,31,200,66,108,67,4,190,66,228,127,200,66,108,98,14,185,66,118,31,201,66,108,16,34,180,66,76,254,201,66,108,117,66,175,66,216,27,203,66,108,174,114,170,66,99,119,204,66,108,208,
                    181,165,66,16,16,206,66,108,227,14,161,66,215,228,207,66,108,225,128,156,66,142,244,209,66,108,180,14,152,66,228,61,212,66,108,52,187,147,66,96,191,214,66,108,38,137,143,66,105,119,217,66,108,58,123,139,66,66,100,220,66,108,6,148,135,66,11,132,223,66,
                    108,12,214,131,66,196,212,226,66,108,174,67,128,66,80,84,230,66,108,112,190,121,66,112,0,234,66,108,168,85,115,66,202,214,237,66,108,30,81,109,66,235,212,241,66,108,174,180,103,66,68,248,245,66,108,237,131,98,66,48,62,250,66,108,46,194,93,66,241,163,
                    254,66,108,124,114,89,66,93,147,1,67,108,153,151,85,66,210,225,3,67,108,253,51,82,66,224,59,6,67,108,210,73,79,66,4,160,8,67,108,247,218,76,66,183,12,11,67,108,249,232,74,66,107,128,13,67,108,24,117,73,66,144,249,15,67,108,66,128,72,66,144,118,18,67,
                    108,18,11,72,66,211,245,20,67,108,213,21,72,66,192,117,23,67,108,131,160,72,66,190,244,25,67,108,194,170,73,66,52,113,28,67,108,234,51,75,66,139,233,30,67,108,255,58,77,66,46,92,33,67,108,180,190,79,66,140,199,35,67,108,109,189,82,66,25,42,38,67,108,
                    64,53,86,66,78,130,40,67,108,245,35,90,66,172,206,42,67,108,7,135,94,66,185,13,45,67,108,169,91,99,66,5,62,47,67,108,194,158,104,66,43,94,49,67,108,245,76,110,66,206,108,51,67,108,159,98,116,66,157,104,53,67,108,220,219,122,66,83,80,55,67,108,68,218,
                    128,66,184,34,57,67,108,32,116,132,66,161,222,58,67,108,52,57,136,66,244,130,60,67,108,23,39,140,66,161,14,62,67,108,70,59,144,66,173,128,63,67,108,35,115,148,66,43,216,64,67,108,253,203,152,66,62,20,66,67,108,11,67,157,66,30,52,67,67,108,114,213,161,
                    66,16,55,68,67,108,68,128,166,66,112,28,69,67,108,135,64,171,66,172,227,69,67,108,46,19,176,66,66,140,70,67,108,36,245,180,66,201,21,71,67,108,73,227,185,66,231,127,71,67,108,118,218,190,66,88,202,71,67,108,125,215,195,66,238,244,71,67,108,46,215,200,
                    66,140,255,71,67,108,85,214,205,66,45,234,71,67,108,191,209,210,66,221,180,71,67,108,62,198,215,66,191,95,71,67,108,164,176,220,66,9,235,70,67,108,205,141,225,66,6,87,70,67,108,156,90,230,66,21,164,69,67,108,0,20,235,66,168,210,68,67,108,241,182,239,
                    66,69,227,67,67,108,121,64,244,66,133,214,66,67,108,176,173,248,66,21,173,65,67,108,193,251,252,66,178,103,64,67,108,246,147,0,67,45,7,63,67,108,194,151,2,67,104,140,61,67,108,250,135,4,67,84,248,59,67,108,98,99,6,67,244,75,58,67,108,201,40,8,67,92,136,
                    56,67,108,13,215,9,67,170,174,54,67,108,26,109,11,67,15,192,52,67,108,238,233,12,67,198,189,50,67,108,148,76,14,67,25,169,48,67,108,40,148,15,67,93,131,46,67,108,218,191,16,67,241,77,44,67,108,234,206,17,67,64,10,42,67,108,170,192,18,67,188,185,39,67,
                    108,128,148,19,67,225,93,37,67,108,228,73,20,67,48,248,34,67,108,98,224,20,67,51,138,32,67,108,154,87,21,67,119,21,30,67,108,62,175,21,67,143,155,27,67,108,24,231,21,67,17,30,25,67,108,4,255,21,67,148,158,22,67,108,242,246,21,67,177,30,20,67,108,232,
                    206,21,67,3,160,17,67,108,255,134,21,67,33,36,15,67,108,100,31,21,67,162,172,12,67,108,92,152,20,67,28,59,10,67,108,58,242,19,67,29,209,7,67,108,107,45,19,67,49,112,5,67,108,108,74,18,67,222,25,3,67,108,206,73,17,67,164,207,0,67,108,54,44,16,67,239,37,
                    253,66,108,89,242,14,67,146,202,248,66,108,2,157,13,67,249,143,244,66,108,10,45,12,67,217,120,240,66,108,94,163,10,67,208,135,236,66,108,248,0,9,67,100,191,232,66,108,228,70,7,67,0,34,229,66,108,62,118,5,67,246,177,225,66,108,46,144,3,67,118,113,222,
                    66,108,237,149,1,67,151,98,219,66,108,121,17,255,66,78,135,216,66,108,220,211,250,66,108,225,213,66,108,186,117,246,66,168,114,211,66,108,220,249,241,66,139,60,209,66,108,36,99,237,66,131,64,207,66,108,126,180,232,66,211,127,205,66,108,236,240,227,66,
                    155,251,203,66,108,120,27,223,66,212,180,202,66,108,59,55,218,66,78,172,201,66,108,86,71,213,66,178,226,200,66,108,243,78,208,66,130,88,200,66,108,62,81,203,66,23,14,200,66,108,2,0,200,66,0,0,200,66,108,1,0,200,66,0,0,200,66,101,0,0 };
                
                Path path;
                path.loadPathFromData (pathData, sizeof (pathData));
                recordIcon.addPath (path, path.getTransformToScaleToFit (Rectangle<float> (1.0f, 1.0f), true));
            }
        }
        
        Path rewindIcon;
        Path fastForwardIcon;
        Path stopIcon;
        Path playIcon;
        Path loopIcon;
        Path recordIcon;
    };
    
    TransportButton (ButtonStyle style, int controlNumber);
    
    ~TransportButton() {}
    
    void paint (Graphics& g) override
    {
        Colour c = getToggleState() ?
                    findColour (TextButton::ColourIds::buttonOnColourId) :
                    findColour(TextButton::ColourIds::buttonColourId);
        
        g.setColour (c);
        
        g.fillAll();
        g.setColour (c.darker());
        
        ShapeButton::paint (g);
    }
    
    void setUpIconButton (const Path& path,
                          int border = 0,
                          float reduction = 0.f,
                          float translation = 0.f,
                          bool useOutline = false)
    {
        const Rectangle<float> r (1.0f, 1.0f);
        Path p;
        
        p.addPath (path, path.getTransformToScaleToFit (r.translated (translation, 0.0f).reduced (reduction), true));
        p.setUsingNonZeroWinding (false);
        
        setShape (p, false, true, false);
        setBorderSize (BorderSize<int>(border));
    }
        
    Button::ButtonState lastState;
    static const TransportIcons icons;
};
    


class TransportButtonComponent  :	public Component,
									public ButtonListener
{
public:
	//==============================================================================
	TransportButtonComponent (MidiManager& m);
	~TransportButtonComponent();
	//==============================================================================
	// called when the close button is pressed or esc is pushed
	void resized();
	void buttonClicked (Button* button);
	void buttonStateChanged(Button *button); 
	
    static TransportButton::TransportIcons icons;
private:
//    struct TransportButton
//    {
//        TransportButton (int controlNumber)
//        :   button (String (controlNumber), Colours::black, Colours::black.brighter(), Colours::darkred),
//            lastState (Button::buttonNormal)
//        {
//            button.setOutline (Colours::black, 1.f);
//        }
//        ShapeButton button;
//        Button::ButtonState lastState;
//    };
    MidiManager& midiManager;
	const int NumberOfButtons = 6;
    const int controlValueBase = 112;
	OwnedArray <TransportButton> buttons;
};



#endif //H_TRANSPORTBUTTONCOMPONENT